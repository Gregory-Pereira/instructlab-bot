# apiserver Containerfile
FROM golang:latest as builder

ENV WORK_DIR /app

WORKDIR ${WORK_DIR}

COPY . ${WORK_DIR}/instructlab-bot

WORKDIR ${WORK_DIR}/instructlab-bot/ui/apiserver

# Build the worker binary
RUN go build -o apiserver apiserver.go && \
    chmod +x apiserver

# Build the apiserver
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o apiserver .

# Stage 2: Fedora base image
FROM fedora:latest

# Install ILab dependencies
RUN dnf update -y && \
    dnf install -y g++ gcc make python3 python3-devel python3-pip git && \
    dnf clean all

# Set up the Python virtual environment
RUN python3 -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"

# Install Python packages and ILab
RUN pip install --upgrade pip && \
    pip cache remove llama_cpp_python && \
    pip install git+https://github.com/instructlab/instructlab.git@stable --extra-index-url=https://download.pytorch.org/whl/cpu

# Mounted work directory containing certs and config.yaml
WORKDIR /data

# Copy the Go binary from the builder stage
COPY --from=builder /app/instructlab-bot/ui/apiserver/apiserver /usr/local/bin/apiserver

# Run the apiserver binary with environment variables
CMD /usr/local/bin/apiserver --listen-address=${LISTEN_ADDRESS:-localhost:3000} --bot-url ${BOT_URL:-http://instructlab-bot:8081}  --redis-server=${REDIS_SERVER:-localhost:6379} --api-user=${API_USER:-kitteh} --api-pass=${API_PASS:-floofykittens} --debug=${DEBUG_MODE:-false} --test-mode=${TEST_MODE:-false}
